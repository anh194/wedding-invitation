version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: wedding_postgres_dev
    environment:
      POSTGRES_DB: wedding_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wedding_network_dev

  # Backend API (Development)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: wedding_backend_dev
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: wedding_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      CORS_ORIGIN: http://localhost:3000
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - wedding_network_dev
    restart: unless-stopped

volumes:
  postgres_data_dev:

networks:
  wedding_network_dev:
    driver: bridge 